<?xml version="1.0" encoding="UTF-8" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- <parent>
    <groupId>org.apache.helix.recipes</groupId>
    <artifactId>recipes</artifactId>
    <version>0.7.2-SNAPSHOT</version>
  </parent> -->
  <groupId>org.HInc</groupId>
  <version>0.7.1-SNAPSHOT</version>
  <artifactId>task-execution</artifactId>
  <packaging>bundle</packaging>
  <name>Apache Helix :: Recipes :: distributed task execution</name>

  <dependencies>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_2.10</artifactId>
      <version>1.3.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.0.1</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.15</version>
      <exclusions>
        <exclusion>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.jms</groupId>
          <artifactId>jms</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jdmk</groupId>
          <artifactId>jmxtools</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jmx</groupId>
          <artifactId>jmxri</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>2.1.0</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
  </dependencies>
 <build>

   <plugins>
     <plugin>
       <groupId>org.apache.felix</groupId>
       <artifactId>maven-bundle-plugin</artifactId>
       <version>2.3.7</version>
       <extensions>true</extensions>
       <configuration>
         <instructions>
           <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
           <Bundle-Description>${project.description}</Bundle-Description>
           <DynamicImport-Package>*</DynamicImport-Package>
           <Import-Package>!*</Import-Package>
           <!-- <Import-Package>!antlr.*,!gnu.*,!javassist.*,!javax.persistence.*,!javax.xml.rpc*,!junit.*,*</Import-Package> -->
           <Export-Package>com.csair.cod.route*;version=${project.version}</Export-Package>
           <Embed-Dependency>log4j,svc-sample-fuse-lib,jbossall-client,testejb;scope=compile|runtime|system
           </Embed-Dependency>
         </instructions>
       </configuration>
     </plugin>
     <plugin>
       <artifactId>maven-compiler-plugin</artifactId>
       <version>2.3.2</version>
       <configuration>
         <source>1.6</source>
         <target>1.6</target>
         <encoding>UTF-8</encoding>
         <!-- add the following args -->
         <fork>true</fork>
         <meminitial>128m</meminitial>
         <maxmem>256m</maxmem>
         <!-- if it doesn't work, try 768M, it seems that UTF-16 consumes more
         memory -->
       </configuration>
     </plugin>
     <plugin>
       <artifactId>maven-resources-plugin</artifactId>
       <version>2.4.3</version>
       <executions>
         <execution>
           <id>copy-resources</id>
           <phase>validate</phase>
           <goals>
             <goal>copy-resources</goal>
           </goals>
           <configuration>
             <outputDirectory>${basedir}/target</outputDirectory>
             <resources>
               <resource>
                 <directory>src/main/resources</directory>
                 <filtering>true</filtering>
               </resource>
             </resources>
           </configuration>
         </execution>
       </executions>
     </plugin>
     <plugin>
       <groupId>org.codehaus.mojo</groupId>
       <artifactId>appassembler-maven-plugin</artifactId>
       <configuration>
         <!-- Set the target configuration directory to be used in the bin scripts -->
         <!-- <configurationDirectory>conf</configurationDirectory> -->
         <!-- Copy the contents from "/src/main/config" to the target configuration
           directory in the assembled application -->
         <!-- <copyConfigurationDirectory>true</copyConfigurationDirectory> -->
         <!-- Include the target configuration directory in the beginning of
           the classpath declaration in the bin scripts -->
         <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
         <assembleDirectory>${project.build.directory}/${project.artifactId}-pkg</assembleDirectory>
         <!-- Extra JVM arguments that will be included in the bin scripts -->
         <extraJvmArguments>-Xms512m -Xmx512m</extraJvmArguments>
         <!-- Generate bin scripts for windows and unix pr default -->
         <platforms>
           <platform>windows</platform>
           <platform>unix</platform>
         </platforms>
         <!--<programs>
           <program>
             <mainClass>org.apache.helix.taskexecution.TaskExecutionDemo</mainClass>
             <name>task-execution-demo</name>
           </program>
           <program>
             <mainClass>org.apache.helix.taskexecution.Worker</mainClass>
             <name>start-worker</name>
           </program>
         </programs> -->
       </configuration>
       <executions>
         <execution>
           <phase>package</phase>
           <goals>
             <goal>assemble</goal>
           </goals>
         </execution>
       </executions>
     </plugin>
   </plugins>
   <resources>
     <resource>
       <directory>src/main/resources</directory>
       <filtering>true</filtering>
     </resource>
   </resources>
 </build>
</project>
